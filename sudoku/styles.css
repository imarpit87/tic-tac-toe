/* Sudoku shared styles (start + play) */
:root{ --pad:16px; --gap:12px; --grid-cap:720px; --keypad-h:260px; --bg-card:#fff; --bg-grid:rgba(0,0,0,.05); }
html,body{ margin:0; height:100%; overflow-x:hidden; touch-action:manipulation; -webkit-tap-highlight-color:transparent; }

/* Start */
.start{ min-height:100vh; display:grid; place-items:center; padding:16px; }
.start-card{ width:min(96vw,520px); background:var(--bg-card); border-radius:20px; box-shadow:0 16px 40px rgba(0,0,0,.12); padding:20px; display:grid; gap:14px; }
.start-form .field{ display:grid; gap:6px; }
.avatar-picker{ display:grid; grid-template-columns:repeat(4,1fr); gap:8px; }
.avatar{ font-size:28px; padding:12px; border-radius:999px; border:2px solid rgba(0,0,0,.08); background:#fff; }
.avatar.selected{ outline:3px solid #CFE4FF; box-shadow:0 0 0 4px rgba(102,126,234,.18); }
.pill-group{ display:flex; flex-wrap:wrap; gap:8px; }
.pill{ padding:10px 16px; border-radius:999px; border:0; background:#fff; box-shadow:0 6px 16px rgba(0,0,0,.08); font-weight:800; }
.pill.active{ outline:3px solid #CFE4FF; }
.btn{ padding:10px 14px; border-radius:12px; border:0; background:linear-gradient(180deg,#6A5AE0,#7D4BE0); color:#fff; font-weight:700; }
.btn.tertiary{ background:#e9ecef; color:#111; }
.actions{ display:flex; gap:10px; justify-content:center; }
.hint{ color:#64748B; font-size:12px; }

/* Play: single-column layout across all sizes */
.play{ min-height:100vh; display:grid; grid-template-columns:1fr; gap:16px; max-width:1100px; margin:0 auto; padding:16px; }
.play-topbar{ position:sticky; top:0; z-index:5; padding:8px var(--pad); background:var(--bg-card); }
.actionbar{ display:flex; flex-wrap:nowrap; justify-content:center; gap:12px; align-items:center; overflow-x:auto; scrollbar-width:none; -webkit-overflow-scrolling:touch; }
.actionbar::-webkit-scrollbar{ display:none; }
.actionbar .btn{ white-space:nowrap; }
.play-stage{ padding:0 var(--pad); padding-bottom:calc(var(--keypad-h) + 16px + env(safe-area-inset-bottom)); overflow:auto; }
.grid-wrap{ display:flex; justify-content:center; }
/* Grid width: clamp ensures positive size; prefer dvh/svh on modern browsers */
#sudoku-grid{ display:grid; grid-template-columns:repeat(9,1fr); gap:6px; width:clamp(300px, min(92vw, var(--grid-cap)), 72vh); aspect-ratio:1/1; margin:0 auto 12px; padding:8px; border-radius:16px; background:var(--bg-grid); box-sizing:border-box; }
@supports (height: 1dvh){ #sudoku-grid{ width:clamp(300px, min(92vw, var(--grid-cap)), 72dvh); } }
@supports (height: 1svh){ #sudoku-grid{ width:clamp(300px, min(92vw, var(--grid-cap)), 72svh); } }
#sudoku-grid .cell{ aspect-ratio:1/1; min-height:48px; border-radius:12px; display:flex; align-items:center; justify-content:center; font-size:clamp(18px,4.2vw,28px); background:#fff; }
#sudoku-grid .cell.given{ background:#FFF3BF; font-weight:800; }
#sudoku-grid .cell.selected{ box-shadow:0 0 0 3px #CFE4FF inset; }
#sudoku-grid .cell.peer{ background:#EEF5FF; }
#sudoku-grid .cell.error{ background:#FEE2E2; animation:shake 120ms linear; }
@keyframes shake{ 50%{ transform:translateX(2px) } }
#sudoku-grid .cell.box-top, #sudoku-grid .cell.box-left, #sudoku-grid .cell.box-right, #sudoku-grid .cell.box-bottom{ outline:2px solid rgba(0,0,0,.15); outline-offset:-2px; }

/* Keypad */
.keypad{ display:grid; grid-template-columns:repeat(3,1fr); gap:12px; max-width:720px; margin:0 auto; }
.keypad button{ height:56px; border-radius:14px; font-weight:700; font-size:18px; background:linear-gradient(180deg,#6A5AE0,#7D4BE0); color:#fff; box-shadow:0 8px 18px rgba(0,0,0,.12); transition: transform .08s, filter .12s, box-shadow .12s; }
.keypad button.flash{ transform:scale(.96); filter:brightness(.95); }
.keypad button[data-clear]{ background:#e9ecef; color:#111; box-shadow:0 6px 16px rgba(0,0,0,.1); }

/* Mobile: fixed keypad with safe padding to avoid overlap; width-only grid sizing to avoid vh jank */
@media (max-width:1023px){
  .desk{ display:none !important; }
  /* Override grid sizing to width-only so vertical viewport changes don't collapse it */
  #sudoku-grid{ width:min(92vw, var(--grid-cap)); }
  /* Keep stage padding for keypad height so grid never overlaps */
  .play-stage{ padding-bottom:calc(var(--keypad-h) + 16px + env(safe-area-inset-bottom)); }
  #sudoku-keypad{ position:fixed; left:0; right:0; bottom:0; height:auto; padding:12px 16px calc(12px + env(safe-area-inset-bottom)); background:#fff; box-shadow:0 -8px 24px rgba(0,0,0,.12); z-index:10; }
}

/* Desktop: keep header at top, grid below, keypad below grid (not fixed) */
@media (min-width:1024px){
  html,body{ overflow-x:hidden; }
  .desk{ display:none !important; }
  #sudoku-keypad{ position:static; height:auto; box-shadow:none; padding:0; margin-top:12px; }
}

/* Toast / modal */
.toast{ position:fixed; left:50%; transform:translateX(-50%); bottom:calc(var(--keypad-h) + 10px + env(safe-area-inset-bottom)); background:rgba(0,0,0,.8); color:#fff; padding:10px 14px; border-radius:12px; opacity:0; transition:opacity .25s; pointer-events:none; }
.toast.show{ opacity:1; }
.modal.hidden{ display:none; }
.menu.hidden{ display:none; }

/* Error bar */
.errorbar{ position:sticky; top:0; z-index:10; background:#fee2e2; color:#7f1d1d; padding:8px 12px; font-weight:700; text-align:center; border-bottom:1px solid #fecaca; }
.errorbar[hidden]{ display:none; }

/* Mobile base */
@media (max-width:1023px){
  /* Make topbar sticky and compact; allow horizontal scroll for buttons */
  .play-topbar{
    position: sticky;
    top: 0;
    z-index: 5;
    background: var(--bg-card);
    padding: 8px var(--pad);
  }
  .actionbar{
    gap: 8px;
    padding: 0 4px;
    overflow-x: auto;  /* already present but keep */
    scrollbar-width: none;
  }
  .actionbar .btn{
    padding: 8px 12px;
    font-size: 14px;
    white-space: nowrap;
  }

  /* Keep grid centered and sized by width on phones; avoid 100vh math */
  #sudoku-grid{
    /* Square via aspect-ratio; size by viewport width to avoid Safari UI jumps */
    width: min(92vw, 720px);
    max-width: 92vw;
  }

  /* Let stage reserve space for keypad dynamically (JS will set --keypad-h) */
  .play-stage{
    padding-bottom: calc(var(--keypad-h, 220px) + 16px + env(safe-area-inset-bottom));
  }

  /* Fixed keypad at the bottom with safe-area support */
  #sudoku-keypad{
    position: fixed;
    left: 0; right: 0; bottom: 0;
    height: var(--keypad-h, 220px);
    padding-bottom: calc(12px + env(safe-area-inset-bottom));
    z-index: 10;
  }
}

/* Landscape-specific tweaks: shrink keypad so grid is visible, allow scrolling */
@media (max-width:1023px) and (orientation:landscape){
  #sudoku-keypad{
    /* Never exceed ~40vh on landscape */
    height: clamp(120px, 38vh, 220px);
  }
}

/* --- Mobile viewport stability (override) --- */
@media (max-width:1023px){
  .play{
    min-height: 100vh;
    min-height: 100dvh;
  }
  html, body{
    overflow-y: auto;
    overscroll-behavior: contain;
    overflow-anchor: none;
  }
  /* Grid by width to avoid vh math */
  #sudoku-grid{
    width: min(92vw, 720px);
    max-width: 92vw;
    aspect-ratio: 1 / 1;
  }
  /* Reserve space for keypad using same clamp as keypad height */
  .play-stage{
    padding-bottom: calc(clamp(140px, 32vh, 240px) + 16px + env(safe-area-inset-bottom));
  }
  /* Fixed keypad, no scroll anchoring */
  #sudoku-keypad{
    position: fixed;
    left: 0; right: 0; bottom: 0;
    height: clamp(140px, 32vh, 240px);
    padding-bottom: calc(12px + env(safe-area-inset-bottom));
    z-index: 10;
    overflow-anchor: none;
    transform: none;
  }
}

/* Landscape keypad clamp (ensure visibility) */
@media (max-width:1023px) and (orientation:landscape){
  #sudoku-keypad{
    height: clamp(120px, 38vh, 240px);
  }
}

/* Center grid within available viewport on mobile */
@media (max-width:1023px){
  .play-stage{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center; /* vertical centering */
    /* Fill the viewport minus topbar + keypad so grid is fully visible */
    min-height: calc(100dvh - var(--topbar-h, 56px) - var(--keypad-h, 220px));
  }
  .grid-wrap{ width: 100%; display: flex; justify-content: center; }
}

/* Mobile refinements: alignment + remove Clear button */
@media (max-width:1023px){
  .play-stage{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start; /* keep content from being cut at center */
  }
  /* Hide Clear button on mobile keypad */
  #sudoku-keypad [data-clear]{ display: none !important; }
}

/* Mobile: ensure topbar is above all and difficulty menu is visible */
@media (max-width:1023px){
  .play-topbar{ z-index: 100; pointer-events: auto; }
  .actionbar{ pointer-events: auto; }
  #difficultyMenu{
    position: fixed;
    top: calc(var(--topbar-h, 56px) + 4px);
    left: 50%; transform: translateX(-50%);
    z-index: 1000;
    background: var(--bg-card,#fff);
    border-radius: 12px;
    box-shadow: 0 12px 32px rgba(0,0,0,.18);
    padding: 8px;
  }
  #difficultyMenu button{ display:block; width:100%; text-align:left; padding:8px 10px; border-radius:8px; }
}

/* START (mobile portrait) */
@media (max-width:1023px){
  .start{
    min-height: 100vh;
    min-height: 100dvh;               /* dynamic vh -> no iOS jump */
    display: grid;
    place-items: center;
    padding: 16px;
  }

  .start-card{
    width: min(94vw, 520px);
    gap: 14px;
    padding: 20px;
  }

  .start-form .field{ gap: 6px; }
  .avatar-picker{ grid-template-columns: repeat(4, 1fr); gap: 8px; }

  .pill-group{
    display: flex; flex-wrap: wrap; gap: 8px;
  }
  .pill{ padding: 10px 14px; font-size: 14px; } /* compact on phones */
}

/* PLAY (mobile portrait) */
@media (max-width:1023px){
  .play{
    min-height: 100vh;
    min-height: 100dvh;                /* dynamic vh for iOS Safari */
    padding: 12px 16px;
  }

  .play-topbar{
    position: sticky; top: 0; z-index: 5;
    background: var(--bg-card);
    padding: 8px 8px;
  }

  .actionbar{
    display: flex;
    gap: 8px;
    overflow-x: auto; scrollbar-width: none;
  }
  .actionbar::-webkit-scrollbar{ display: none; }
  .actionbar .btn{ padding: 8px 12px; font-size: 14px; white-space: nowrap; }

  .play-stage{
    /* reserve real space for keypad; JS sets --keypad-h */
    padding: 0 0 calc(var(--keypad-h, 220px) + 16px + env(safe-area-inset-bottom));
    overflow-y: auto;
  }

  /* center the board; size by width to avoid 100vh math on iOS */
  .grid-wrap{ display: flex; justify-content: center; width: 100%; }
  #sudoku-grid{
    width: min(92vw, 720px);
    max-width: 92vw;
    aspect-ratio: 1 / 1;
    margin: 0 auto;
  }

  /* fixed keypad at bottom; never anchor scroll to it */
  #sudoku-keypad{
    position: fixed; left: 0; right: 0; bottom: 0;
    height: var(--keypad-h, 220px);
    padding: 12px 16px calc(12px + env(safe-area-inset-bottom));
    z-index: 10;
    overflow-anchor: none;
  }

  /* allow page scroll on phones */
  html, body{ overflow-y: auto; overscroll-behavior: contain; }
}

/* Mobile stable viewport container */
@media (max-width:1023px){
  html, body{ height: 100%; min-height: 100%; min-height: -webkit-fill-available; }
  .play{ min-height: 100%; min-height: -webkit-fill-available; }
  /* Use a JS-provided --vvh (visual viewport height) to size the stage safely */
  .play-stage{ min-height: calc(var(--vvh, 100svh) - var(--topbar-h, 56px) - var(--keypad-h, 220px)); }
}

/* Final mobile override: ignore viewport-height min-height to avoid jumps */
@media (max-width:1023px){
  .play-stage{ min-height: auto !important; }
}

/* Mobile: in-flow spacer to permanently reserve keypad space */
@media (max-width:1023px){
  .play-stage::after{
    content: "";
    display: block;
    height: calc(var(--keypad-h, 220px) + env(safe-area-inset-bottom));
  }
}

/* Mobile: make keypad in-flow to eliminate viewport reflow */
@media (max-width:1023px){
  .play-stage{ padding: 16px; overflow-y: auto; }
  .play-stage::after{ content: none !important; }
  #sudoku-keypad{
    position: static !important;
    height: auto !important;
    padding: 12px 16px;
    box-shadow: none;
    z-index: auto;
    margin: 0 auto; max-width: 720px;
  }
}

/* Mobile portrait only layout fix */
@media (max-width: 480px) and (orientation: portrait) {
  /* Center the main container */
  .sudoku-container,
  .play,
  .play-stage,
  .grid-wrap { max-width: 100%; margin: 0 auto; }

  /* Center the top row of controls */
  .play-topbar, .actionbar {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
  }

  /* Grid centered and sized by width */
  #sudoku-grid {
    width: min(92vw, 520px);
    aspect-ratio: 1 / 1;
    margin: 12px auto;
  }

  /* Bottom keypad as full-width bar */
  #sudoku-keypad:not(.keypad--desk) {
    position: fixed;
    left: 0; right: 0; bottom: 0;
    z-index: 20;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 12px;
    padding: 12px 16px calc(12px + env(safe-area-inset-bottom));
    background: var(--bg-card, #fff);
    box-shadow: 0 -10px 30px rgba(0,0,0,.12);
    border-top-left-radius: 16px;
    border-top-right-radius: 16px;
    overflow-anchor: none;
  }

  #sudoku-keypad button {
    min-height: 56px;            /* bigger touch target */
    font-size: clamp(18px, 5vw, 22px);
    font-weight: 700;
    border-radius: 14px;
    transition: transform .08s, filter .12s;
  }
  #sudoku-keypad button:active { transform: scale(.97); filter: brightness(.96); }

  /* If Clear exists, make it full width */
  #sudoku-keypad button[data-clear] { grid-column: 1 / -1; min-height: 52px; }

  /* Ensure the content leaves space for the fixed keypad */
  .play-stage, .grid-wrap {
    padding-bottom: calc(var(--kb, 260px) + 16px + env(safe-area-inset-bottom));
  }

  /* Don’t clip content on mobile */
  html, body { overflow-x: hidden; overflow-y: auto; }
}

:root{
  --vh: 1vh;               /* updated by JS */
  --kb-h: 260px;           /* keypad height (mobile portrait), updated by JS */
  --hdr-h: 0px;            /* header height (mobile portrait), updated by JS */
  --page-pad: 16px;
}

/* Mobile portrait only */
@media (max-width: 600px) and (orientation: portrait) {
  /* page scroll allowed; nothing should hide the grid */
  html, body { overflow-x: hidden; overflow-y: auto; }

  .play { display: flex; flex-direction: column; align-items: center; }

  /* Top controls (Home, New Game, Difficulty, Notes/Hint/Undo/Redo/Timer) */
  .play-topbar, .actionbar, .controls-row {
    width: 100%;
    max-width: 640px;
    margin: 8px auto 0;
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    justify-content: center;   /* center buttons */
    align-items: center;
  }

  /* Stage holds the grid; bottom padding keeps it above the fixed keypad */
  .play-stage {
    width: 100%;
    max-width: 640px;
    padding: 8px var(--page-pad) calc(var(--kb-h) + 12px + env(safe-area-inset-bottom));
    box-sizing: border-box;
  }

  .grid-wrap {
    width: 100%;
    display: flex;
    justify-content: center;
  }

  /* Make the grid a perfect square that fits between header and keypad */
  #sudoku-grid {
    /* available height = viewport - header - keypad - margins */
    --avail-h: calc(var(--vh) * 100 - var(--hdr-h) - var(--kb-h) - 24px);
    width: min(92vw, 520px, var(--avail-h));
    aspect-ratio: 1 / 1;
    margin: 0 auto;
  }

  /* Comfortable touch size for cells on small phones */
  #sudoku-grid .cell { min-height: 40px; border-radius: 10px; }

  /* Keypad fixed at the bottom, centered content */
  .keypad:not(.keypad--desk){
    position: fixed;
    left: 0; right: 0; bottom: 0;
    height: var(--kb-h);
    padding: 12px var(--page-pad) calc(12px + env(safe-area-inset-bottom));
    background: var(--bg-card, #fff);
    box-shadow: 0 -10px 24px rgba(0,0,0,.12);
    z-index: 10;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 12px;
    max-width: 640px;
    margin: 0 auto;
  }
  .keypad:not(.keypad--desk) button{
    min-height: 56px;            /* larger touch area */
    font-size: 18px;
    border-radius: 14px;
    font-weight: 700;
  }
}